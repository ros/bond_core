cmake_minimum_required(VERSION 3.5)
project(bondcpp)

if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()
add_definitions(-DNOMINMAX)

find_package(ament_cmake REQUIRED)
find_package(bond REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rclcpp_lifecycle REQUIRED)
find_package(smclib REQUIRED)
find_package(Threads REQUIRED)

if(UNIX AND NOT APPLE)
  find_package(PkgConfig REQUIRED)
  pkg_check_modules(UUID REQUIRED uuid)
  # we have to find the absolute path to uuid as target_link_directories is not available before cmake 3.13
  find_library(uuid_ABS_PATH ${UUID_LIBRARIES} PATHS ${UUID_LIBRARY_DIRS})
elseif(WIN32)
  set(uuid_ABS_PATH Rpcrt4.lib)
endif()

add_library(${PROJECT_NAME}
  SHARED
  src/bond.cpp
  src/BondSM_sm.cpp)
target_include_directories(${PROJECT_NAME} PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>
  ${UUID_INCLUDE_DIRS})
if(WIN32)
  target_compile_definitions(${PROJECT_NAME}
    PRIVATE "BONDCPP_BUILDING_LIBRARY")
endif()
ament_target_dependencies(${PROJECT_NAME}
  bond
  rclcpp
  rclcpp_lifecycle
  smclib)
target_link_libraries(${PROJECT_NAME} ${uuid_ABS_PATH})

install(
  TARGETS ${PROJECT_NAME}
  ARCHIVE DESTINATION lib
  LIBRARY DESTINATION lib
  RUNTIME DESTINATION bin)

install(
  DIRECTORY include/
  DESTINATION include)

ament_export_dependencies(ament_cmake)
ament_export_dependencies(bond rclcpp rclcpp_lifecycle smclib)
ament_export_include_directories(include)
ament_export_libraries(${PROJECT_NAME})

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  set(ament_cmake_copyright_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()
ament_package()

