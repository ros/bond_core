cmake_minimum_required(VERSION 3.5)
project(bondcpp)

if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

find_package(ament_cmake REQUIRED)
find_package(bond REQUIRED)
find_package(rclcpp REQUIRED)
find_package(smclib REQUIRED)
find_package(Threads REQUIRED)

find_package(PkgConfig REQUIRED)
pkg_check_modules(UUID REQUIRED uuid)

add_library(${PROJECT_NAME}
  src/bond.cpp
  src/BondSM_sm.cpp)
target_include_directories(${PROJECT_NAME} PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>
  ${UUID_INCLUDE_DIRS})
ament_target_dependencies(${PROJECT_NAME}
  bond
  rclcpp
  smclib)
target_link_libraries(${PROJECT_NAME} ${UUID_LIBRARIES})

install(
  TARGETS ${PROJECT_NAME}
  ARCHIVE DESTINATION lib
  LIBRARY DESTINATION lib
  RUNTIME DESTINATION bin)

install(
  DIRECTORY include/
  DESTINATION include)

ament_export_dependencies(ament_cmake)
ament_export_dependencies(bond rclcpp smclib)
ament_export_include_directories(include)
ament_export_libraries(${PROJECT_NAME})

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  ament_lint_auto_find_test_dependencies()
endif()
ament_package()

